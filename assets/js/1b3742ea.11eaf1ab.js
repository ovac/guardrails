"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[6376],{8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},9188:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"patterns","title":"Common Patterns","description":"Two-man rule, peer review, role fallback, and more.","source":"@site/versioned_docs/version-0.2.0/patterns.md","sourceDirName":".","slug":"/patterns","permalink":"/guardrails/docs/0.2.0/patterns","draft":false,"unlisted":false,"editUrl":"https://github.com/ovac/guardrails/edit/main/resources/docs/versioned_docs/version-0.2.0/patterns.md","tags":[{"inline":true,"label":"patterns","permalink":"/guardrails/docs/0.2.0/tags/patterns"},{"inline":true,"label":"recipes","permalink":"/guardrails/docs/0.2.0/tags/recipes"},{"inline":true,"label":"approvals","permalink":"/guardrails/docs/0.2.0/tags/approvals"}],"version":"0.2.0","frontMatter":{"title":"Common Patterns","description":"Two-man rule, peer review, role fallback, and more.","tags":["patterns","recipes","approvals"]},"sidebar":"docs","previous":{"title":"Guardrails Overview","permalink":"/guardrails/docs/0.2.0/overview"},"next":{"title":"permissions","permalink":"/guardrails/docs/0.2.0/permissions"}}');var a=t(4848),o=t(8453);const s={title:"Common Patterns",description:"Two-man rule, peer review, role fallback, and more.",tags:["patterns","recipes","approvals"]},i="Common Patterns",l={},c=[{value:"Two-Man Rule (initiator + one peer)",id:"two-man-rule-initiator--one-peer",level:2},{value:"One of Any Two Roles",id:"one-of-any-two-roles",level:2},{value:"Multi-Step Escalation",id:"multi-step-escalation",level:2},{value:"Controller Intercept Without Touching Models",id:"controller-intercept-without-touching-models",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"common-patterns",children:"Common Patterns"})}),"\n",(0,a.jsx)(n.h2,{id:"two-man-rule-initiator--one-peer",children:"Two-Man Rule (initiator + one peer)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfPermissions(['orders.manage'])\n  ->includeInitiator(true, true)\n  ->toStep(2, 'Ops Two-Man')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"one-of-any-two-roles",children:"One of Any Two Roles"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfRoles(['finance_manager','ops_manager'])\n  ->toStep(1, 'Management')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"multi-step-escalation",children:"Multi-Step Escalation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfPermissions(['local_rates.manage'])\n  ->includeInitiator(true, true)\n  ->toStep(2, 'Ops')\n  ->anyOfRoles(['finance_manager','ops_manager'])\n  ->toStep(1, 'Management')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"controller-intercept-without-touching-models",children:"Controller Intercept Without Touching Models"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"$changes = $request->validate(['status_id' => 'integer']);\n\n$result = $this->actorApprovalIntercept($model, $changes, [\n  'only' => ['status_id'],\n  'extender' => Flow::make()->anyOfPermissions(['orders.manage','orders.escalate'])->toStep(2, 'Ops'),\n]);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);