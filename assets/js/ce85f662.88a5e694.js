"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[8446],{212:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"permissions","title":"permissions","description":"title: Permissions & Policies","source":"@site/docs/permissions.md","sourceDirName":".","slug":"/permissions","permalink":"/guardrails/docs/next/permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/ovac/guardrails/edit/main/resources/docs/docs/permissions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Common Patterns","permalink":"/guardrails/docs/next/patterns"},"next":{"title":"testing-full","permalink":"/guardrails/docs/next/testing-full"}}');var r=i(4848),l=i(8453);const o={},t="Permissions & Policies",c={},d=[];function a(e){const s={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"title: Permissions & Policies\ndescription: How Guardrails authorizes viewing and signing."}),"\n",(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"permissions--policies",children:"Permissions & Policies"})}),"\n",(0,r.jsxs)(s.p,{children:["By default, Guardrails\u2019 routes require an authenticated ",(0,r.jsx)(s.code,{children:"staff"})," user and the ",(0,r.jsx)(s.code,{children:"approvals.manage"})," ability (configurable). There are two authorization layers used internally:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Spatie Permissions (if available)"}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Permissions are checked with ",(0,r.jsx)(s.code,{children:"$staff->hasPermissionTo('...')"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Roles are checked with ",(0,r.jsx)(s.code,{children:"$staff->hasRole('...')"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsx)(s.li,{children:"Token Abilities (fallback)"}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["When Spatie is not available, permissions are matched against ",(0,r.jsx)(s.code,{children:"currentAccessToken()->abilities"}),"."]}),"\n",(0,r.jsx)(s.li,{children:"Roles are not supported in this mode."}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Signer Rules"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"permissions"})," + ",(0,r.jsx)(s.code,{children:"permissions_mode"})," (all|any)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"roles"})," + ",(0,r.jsx)(s.code,{children:"roles_mode"})," (all|any)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"guard"}),": auth guard (default ",(0,r.jsx)(s.code,{children:"staff"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"same_permission_as_initiator"})," / ",(0,r.jsx)(s.code,{children:"same_role_as_initiator"}),": require overlap"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Route-level Permissions"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"permissions.view"}),": required for listing/paging requests"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"permissions.sign"}),": required for approving steps"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Adjust these in ",(0,r.jsx)(s.code,{children:"config/guardrails.php"})," to map to your own abilities."]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>t});var n=i(6540);const r={},l=n.createContext(r);function o(e){const s=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);