"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[4363],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}},60415:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"advanced","title":"advanced","description":"title: Advanced Flows","source":"@site/versioned_docs/version-1.0.0/advanced.md","sourceDirName":".","slug":"/advanced","permalink":"/guardrails/docs/advanced","draft":false,"unlisted":false,"editUrl":"https://github.com/ovac/guardrails/edit/main/resources/docs/versioned_docs/version-1.0.0/advanced.md","tags":[],"version":"1.0.0","frontMatter":{},"sidebar":"docs","previous":{"title":"Use Cases","permalink":"/guardrails/docs/use-cases"},"next":{"title":"Config Recipes","permalink":"/guardrails/docs/config-recipes"}}');var r=s(74848),a=s(28453);const t={},d="Advanced Flows",l={},o=[{value:"Risk-Based Thresholds",id:"risk-based-thresholds",level:2},{value:"Attribute-Scoped Rules",id:"attribute-scoped-rules",level:2},{value:"Environment-Aware",id:"environment-aware",level:2},{value:"Same\u2011as\u2011Initiator Overlap",id:"sameasinitiator-overlap",level:2},{value:"Related Guides",id:"related-guides",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"title: Advanced Flows\ndescription: Dynamic flows, risk scoring, conditional steps, and context-aware rules."}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced-flows",children:"Advanced Flows"})}),"\n",(0,r.jsx)(n.p,{children:"Flows can be computed at runtime based on changes, initiator, environment, or any business signal."}),"\n",(0,r.jsx)(n.h2,{id:"risk-based-thresholds",children:"Risk-Based Thresholds"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"public function guardrailApprovalFlow(array $dirty, string $event): array\n{\n    $risk = 0;\n    if (($dirty['amount'] ?? 0) > 100000) $risk += 2;\n    if (($dirty['status'] ?? null) === 'critical') $risk += 1;\n\n    $flow = Flow::make()->anyOfPermissions(['ops.change']);\n\n    if ($risk >= 2) {\n        $flow->signedBy(2, 'Ops (High Risk)')->anyOfRoles(['cfo'])->signedBy(1, 'CFO');\n    } else {\n        $flow->signedBy(1, 'Ops');\n    }\n\n    return $flow->build();\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"attribute-scoped-rules",children:"Attribute-Scoped Rules"}),"\n",(0,r.jsx)(n.p,{children:"Only guard some attributes; let others pass."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$result = $this->guardrailIntercept($model, $changes, [\n  'description' => 'Cross-functional review for public flags and pricing.',\n  'only' => ['published','price','visibility'],\n  'extender' => Flow::make()->anyOfRoles(['editor','ops_manager'])->signedBy(1, 'Review'),\n]);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-aware",children:"Environment-Aware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"if (app()->environment('production')) {\n  config(['guardrails.controller.enabled' => true]);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"sameasinitiator-overlap",children:"Same\u2011as\u2011Initiator Overlap"}),"\n",(0,r.jsx)(n.p,{children:"Require a peer sharing at least one permission as the initiator."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->permissions(['settings.update','settings.tune'])\n  ->requireAnyPermissions()\n  ->samePermissionAsInitiator(true)\n  ->includeInitiator(true, true)\n  ->signedBy(2, 'Peer Review')\n  ->build();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-guides",children:"Related Guides"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/guardrails/docs/usage-models",children:"Model Guarding Guide"})," \u2014 Attach advanced flows directly to models."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/guardrails/docs/usage-controllers",children:"Controller Interception Guide"})," \u2014 Apply these patterns to inbound requests."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/guardrails/docs/patterns",children:"Common Patterns"})," \u2014 Browse ready-made flow snippets to adapt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/guardrails/docs/testing-full",children:"Full Testing Guide"})," \u2014 Learn how to exercise complex policies in tests."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);