"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[8719],{28453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>o});var r=i(96540);const n={},l=r.createContext(n);function t(e){const s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(l.Provider,{value:s},e.children)}},72289:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"flow-builder","title":"flow-builder","description":"title: Flow Builder Reference","source":"@site/docs/flow-builder.md","sourceDirName":".","slug":"/flow-builder","permalink":"/guardrails/docs/next/flow-builder","draft":false,"unlisted":false,"editUrl":"https://github.com/ovac/guardrails/edit/main/resources/docs/docs/flow-builder.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Controller Interception Guide","permalink":"/guardrails/docs/next/usage-controllers"},"next":{"title":"Flows and Policies","permalink":"/guardrails/docs/next/flows-and-policies"}}');var n=i(74848),l=i(28453);const t={},o="Flow Builder Reference",a={},d=[];function c(e){const s={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"title: Flow Builder Reference\ndescription: All methods on FlowBuilder with examples."}),"\n",(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"flow-builder-reference",children:"Flow Builder Reference"})}),"\n",(0,n.jsxs)(s.p,{children:["Namespace: ",(0,n.jsx)(s.code,{children:"OVAC\\\\Guardrails\\\\Services\\\\FlowBuilder"}),"\nImplements: ",(0,n.jsx)(s.code,{children:"OVAC\\\\Guardrails\\\\Contracts\\\\FlowExtender"})]}),"\n",(0,n.jsx)(s.p,{children:"Usage"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-php",children:"use OVAC\\\\Guardrails\\\\Services\\\\Flow;\n\n$flow = Flow::make()\n  ->anyOfPermissions(['orders.manage','orders.escalate'])\n  ->includeInitiator(true, true)\n  ->signedBy(2, 'Ops Review')\n  ->anyOfRoles(['finance_manager','ops_manager'])\n  ->signedBy(1, 'Management')\n  ->build();\n"})}),"\n",(0,n.jsx)(s.p,{children:"API"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"static make(): static"})," \u2014 Create a new builder."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"guard(string $guard): static"})," \u2014 Auth guard for signer checks (defaults to your configured guard, typically ",(0,n.jsx)(s.code,{children:"web"}),")."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"permissions(array|string $perms): static"})," \u2014 Append permission(s); all-of by default."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"setPermissions(array|string $perms): static"})," \u2014 Replace permissions list."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"anyOfPermissions(array|string $perms): static"})," \u2014 Use any-of semantics."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"requireAnyPermissions(): static"})," \u2014 Alias to set any-of mode."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"requireAllPermissions(): static"})," \u2014 Alias to set all-of mode."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"roles(array|string $roles): static"})," \u2014 Append role(s); all-of by default."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"setRoles(array|string $roles): static"})," \u2014 Replace roles list."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"anyOfRoles(array|string $roles): static"})," \u2014 Use any-of semantics."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"requireAnyRoles(): static"})," \u2014 Alias to set any-of mode."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"requireAllRoles(): static"})," \u2014 Alias to set all-of mode."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"includeInitiator(bool $include = true, bool $preapprove = true): static"})," \u2014 Include initiator as a potential signer and optionally pre-approve."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"samePermissionAsInitiator(bool $require = true): static"})," \u2014 Require overlap with initiator\u2019s permission(s)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"sameRoleAsInitiator(bool $require = true): static"})," \u2014 Require overlap with initiator\u2019s role(s)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"rejectionThreshold(?int $min, ?int $max = null): static"})," \u2014 Set minimum/maximum rejection votes required to fail the step (defaults to a simple majority of the approval threshold)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"minRejections(int $min): static"})," \u2014 Convenience alias for ",(0,n.jsx)(s.code,{children:"rejectionThreshold($min, current max)"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"maxRejections(?int $max): static"})," \u2014 Convenience alias for ",(0,n.jsx)(s.code,{children:"rejectionThreshold(current min, $max)"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"signedBy(?int $threshold = 1, ?string $name = null, array $meta = []): static"})," \u2014 Finalize current step and push to flow."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"addStep(array $step): static"})," \u2014 Add a normalized step array directly."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"build(): array"})," \u2014 Return the configured flow. If only signers were configured, creates a single step."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Notes"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Any-of vs all-of determines whether a signer needs one or all listed permissions/roles."}),"\n",(0,n.jsx)(s.li,{children:"Pre-approving initiator counts them immediately toward the threshold."}),"\n",(0,n.jsxs)(s.li,{children:["If you do not set a rejection threshold, Guardrails requires a simple majority of the approval threshold (e.g., approval threshold ",(0,n.jsx)(s.code,{children:"3"})," \u21d2 ",(0,n.jsx)(s.code,{children:"2"})," rejections to fail)."]}),"\n",(0,n.jsx)(s.li,{children:"\u201cSame-as-initiator\u201d constraints require Spatie permissions/roles to compute overlaps."}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"Flow::make()"})," automatically seeds the guard with ",(0,n.jsx)(s.code,{children:"guardrails.auth.guard"})," (falling back to ",(0,n.jsx)(s.code,{children:"auth.defaults.guard"}),"), so flows stay aligned with your configuration."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);