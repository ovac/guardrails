"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[3365],{27559:(e,n,r)=>{r.r(n),r.d(n,{default:()=>M});var a=r(79139),i=r(72444),o=r(10467),l=r(96540),s=r(95293),t=r(60217),c=r(40142),d=r(68901),u=r(74848);function p(e){return Object.assign({label:"Approval Step",approvals:1,permissions:"",permissionsMode:"any",roles:"",rolesMode:"any",samePermissionAsInitiator:!1,sameRoleAsInitiator:!1,minRejections:null,maxRejections:null},e)}var f={twoPerson:{label:"Two-person publish rule",description:"Author plus one peer required before publishing a post.",defaults:{includeInitiator:!0,steps:[p({label:"Editorial Review",approvals:2,permissions:"content.publish",permissionsMode:"all"})],fields:"published",scenario:"model"},controller:{description:"Controller intercept requiring initiator + one editor before toggling publish flag.",fields:"published"}},escalation:{label:"Ops escalates to security",description:"Ops lead approves first, then security for destructive actions.",defaults:{includeInitiator:!1,steps:[p({label:"Ops Review",roles:"ops_lead",rolesMode:"any"}),p({label:"Security Review",roles:"security_officer",rolesMode:"any"})],fields:"status",scenario:"model"},controller:{description:"Controller flow intercepting destructive operations, first ops then security.",fields:"status"}},anyOf:{label:"Management any-of approval",description:"One of many finance or ops managers can approve refunds.",defaults:{includeInitiator:!1,steps:[p({label:"Management Approval",roles:"finance_manager,ops_manager",rolesMode:"any"})],fields:"refunded",scenario:"model"},controller:{description:"Controller hook requiring one manager before finalizing refund payload.",fields:"refunded"}},policy:{label:"Policy update - legal or security",description:"Any one of legal or security can approve a policy change.",defaults:{includeInitiator:!1,steps:[p({label:"Policy Review",roles:"legal_lead,security_lead",rolesMode:"any"})],fields:"policy_text",scenario:"model"},controller:{description:"Pass inbound policy payload through approval before persisting.",fields:"policy_text"}},highRiskConfig:{label:"High-risk config change",description:"Peer confirmation required when toggling high-risk configuration flags.",defaults:{includeInitiator:!0,steps:[p({label:"Config Review",approvals:2,permissions:"infra.config",permissionsMode:"all",roles:"senior_engineer,team_lead",rolesMode:"all"})],fields:"high_risk_flags",scenario:"model"},controller:{description:"Intercept config payload to require second engineer confirmation.",fields:"high_risk_flags"}},financial:{label:"Payout double-sign",description:"Two approvals with payouts.approve permission before releasing payouts.",defaults:{includeInitiator:!1,steps:[p({label:"Finance Sign-off",approvals:2,permissions:"payouts.approve",permissionsMode:"all"})],fields:"payout_status",scenario:"model"},controller:{description:"Require two finance approvers before marking payout as released.",fields:"payout_status"}},piiAccess:{label:"PII access change",description:"Security and data-protection officer must approve PII access changes.",defaults:{includeInitiator:!1,steps:[p({label:"Security Approval",roles:"security_officer",rolesMode:"any"}),p({label:"Privacy Review",roles:"data_protection_officer",rolesMode:"any"})],fields:"pii_access_level",scenario:"model"},controller:{description:"Intercept API to adjust PII access; requires both security and DPO.",fields:"pii_access_level"}},anyOfRoles:{label:"Any-of roles with initiator optional",description:"Allow one of several operations leads, optionally counting the initiator when eligible.",defaults:{includeInitiator:!0,steps:[p({label:"Operations Review",approvals:2,roles:"operations_lead,regional_lead",rolesMode:"any"})],fields:"status",scenario:"model"},controller:{description:"Controller intercept for operations review on critical changes.",fields:"status"}},escalationLevels:{label:"Multi-level escalation",description:"Three escalation tiers (ops \u2192 legal \u2192 executive) for irreversible changes.",defaults:{includeInitiator:!1,steps:[p({label:"Ops Escalation",roles:"ops_lead",rolesMode:"any"}),p({label:"Legal Escalation",roles:"legal_lead",rolesMode:"any"}),p({label:"Executive Escalation",roles:"executive",rolesMode:"any"})],fields:"state",scenario:"model"},controller:{description:"Intercept irreversible controller action for three-step escalation.",fields:"state"}},peerConfirmation:{label:"Peer confirmation (same permission)",description:"Initiator counted only if another peer shares the permission.",defaults:{includeInitiator:!0,steps:[p({label:"Peer Confirmation",approvals:2,permissions:"local_rates.manage",permissionsMode:"any",samePermissionAsInitiator:!0})],fields:"local_rates",scenario:"model"},controller:{description:"Controller-level guard requiring peer with same permission for change.",fields:"local_rates"}},vendorOnboarding:{label:"Vendor onboarding compliance",description:"Procurement, security, and finance approvals before activating a new vendor.",defaults:{includeInitiator:!1,steps:[p({label:"Procurement Review",roles:"procurement_lead",rolesMode:"any"}),p({label:"Security Assessment",roles:"security_analyst",rolesMode:"any"}),p({label:"Finance Approval",roles:"finance_controller",rolesMode:"any"})],fields:"vendor_status,contract_terms",scenario:"model"},controller:{description:"Controller guard to route vendor onboarding through compliance before activation.",fields:"vendor_status,contract_terms"}},emergencyKillSwitch:{label:"Emergency kill switch",description:"Sequential SRE, incident, and executive approvals before disabling production.",defaults:{includeInitiator:!1,steps:[p({label:"SRE Approval",roles:"sre_on_call",rolesMode:"any"}),p({label:"Incident Commander Confirmation",roles:"incident_commander",rolesMode:"any"}),p({label:"Executive Override",roles:"chief_technology_officer",rolesMode:"any"})],fields:"kill_switch",scenario:"controller"},controller:{description:"Require human approvals before toggling the production kill switch.",fields:"kill_switch"}},regionalPricing:{label:"Regional pricing override",description:"Regional manager and finance must approve strategic price overrides.",defaults:{includeInitiator:!1,steps:[p({label:"Regional Review",roles:"regional_manager",rolesMode:"any"}),p({label:"Finance Sign-off",roles:"finance_director",rolesMode:"any"})],fields:"regional_pricing",scenario:"model"},controller:{description:"Intercept price override payloads until regional and finance stakeholders approve.",fields:"regional_pricing,notes"}},contractAmendment:{label:"Enterprise contract amendment",description:"Account executive, legal, and CFO approvals for contract changes.",defaults:{includeInitiator:!0,steps:[p({label:"Account Executive Confirmation",roles:"account_executive",rolesMode:"any"}),p({label:"Legal Review",roles:"legal_counsel",rolesMode:"any"}),p({label:"CFO Sign-off",roles:"chief_financial_officer",rolesMode:"any"})],fields:"contract_terms,contract_value",scenario:"controller"},controller:{description:"Require layered sign-off before applying amendments to enterprise contracts.",fields:"contract_terms,contract_value"}},budgetIncrease:{label:"Departmental budget increase",description:"Ops, finance partner, and CFO approvals for expanding budgets.",defaults:{includeInitiator:!1,steps:[p({label:"Operations Justification",roles:"operations_manager",rolesMode:"any"}),p({label:"Finance Partner Review",roles:"finance_business_partner",rolesMode:"any"}),p({label:"CFO Approval",roles:"cfo",rolesMode:"any"})],fields:"budget_ceiling",scenario:"model"},controller:{description:"Enforce approvals before raising departmental budget ceilings from the API.",fields:"budget_ceiling,justification"}},sensitiveFeatureToggle:{label:"Sensitive feature toggle",description:"Product and security review before enabling sensitive feature flags.",defaults:{includeInitiator:!1,steps:[p({label:"Product Review",roles:"product_lead",rolesMode:"any"}),p({label:"Security Sign-off",roles:"security_architect",rolesMode:"any"})],fields:"feature_flags",scenario:"model"},controller:{description:"Intercept feature toggle requests for sensitive capabilities.",fields:"feature_flags"}},vipRefund:{label:"VIP refund escalation",description:"High-value refunds require support leadership and finance sign-off.",defaults:{includeInitiator:!1,steps:[p({label:"Support Leadership Review",roles:"support_lead",rolesMode:"any"}),p({label:"Finance Approval",roles:"finance_director",rolesMode:"any"})],fields:"refund_amount,refund_reason",scenario:"controller"},controller:{description:"Block large VIP refunds until support and finance approve the payload.",fields:"refund_amount,refund_reason"}},dataRetentionOverride:{label:"Data retention override",description:"Legal and privacy must approve exceptions to retention policies.",defaults:{includeInitiator:!1,steps:[p({label:"Legal Approval",roles:"legal_counsel",rolesMode:"any"}),p({label:"Privacy Review",roles:"privacy_officer",rolesMode:"any"})],fields:"retention_policy,retention_expires_at",scenario:"model"},controller:{description:"Intercept retention overrides initiated by services or dashboards.",fields:"retention_policy,retention_expires_at"}},mlModelPromotion:{label:"ML model promotion",description:"ML lead, risk, and compliance approvals before promoting a model to production.",defaults:{includeInitiator:!1,steps:[p({label:"ML Lead Review",roles:"ml_lead",rolesMode:"any"}),p({label:"Risk Assessment",roles:"risk_officer",rolesMode:"any"}),p({label:"Compliance Approval",roles:"compliance_manager",rolesMode:"any"})],fields:"model_version,rollout_plan",scenario:"model"},controller:{description:"Require cross-functional approvals before promoting ML models via pipeline.",fields:"model_version,rollout_plan"}},warehouseTransfer:{label:"Warehouse transfer above threshold",description:"Large inventory transfers need manager, finance, and logistics approvals.",defaults:{includeInitiator:!1,steps:[p({label:"Inventory Manager Review",roles:"inventory_manager",rolesMode:"any"}),p({label:"Finance Controller Approval",roles:"finance_controller",rolesMode:"any"}),p({label:"Logistics Coordination",roles:"logistics_director",rolesMode:"any"})],fields:"transfer_quantity,transfer_value",scenario:"controller"},controller:{description:"Gate high-value warehouse transfers behind staged approvals.",fields:"transfer_quantity,transfer_value"}},creditLimitRaise:{label:"Customer credit limit raise",description:"Account, risk, and finance leadership sign-off on major credit moves.",defaults:{includeInitiator:!1,steps:[p({label:"Account Owner Justification",roles:"account_owner",rolesMode:"any"}),p({label:"Risk Review",roles:"risk_analyst",rolesMode:"any"}),p({label:"Finance Leader Approval",roles:"finance_director",rolesMode:"any"})],fields:"credit_limit",scenario:"model"},controller:{description:"Require staged approvals before increasing customer credit limits through the UI.",fields:"credit_limit,credit_notes"}},marketingBlast:{label:"Marketing blast to large audience",description:"Marketing, legal, and deliverability approvals for big sends.",defaults:{includeInitiator:!1,steps:[p({label:"Marketing Approval",roles:"marketing_manager",rolesMode:"any"}),p({label:"Legal Review",roles:"legal_reviewer",rolesMode:"any"}),p({label:"Deliverability Check",roles:"deliverability_lead",rolesMode:"any"})],fields:"audience_id,send_time,template_id",scenario:"controller"},controller:{description:"Ensure large audience sends are reviewed before scheduling.",fields:"audience_id,send_time,template_id"}},rolePromotion:{label:"Role promotion with elevated privileges",description:"Manager and security must approve before granting higher roles.",defaults:{includeInitiator:!1,steps:[p({label:"Manager Approval",roles:"manager",rolesMode:"any"}),p({label:"Security Review",roles:"security_admin",rolesMode:"any"})],fields:"role_id,permissions",scenario:"model"},controller:{description:"Intercept role promotions that grant elevated permissions.",fields:"role_id,permissions"}},customsDeclaration:{label:"Customs declaration amendment",description:"Logistics, compliance, and customs broker approvals before filing updates.",defaults:{includeInitiator:!1,steps:[p({label:"Logistics Review",roles:"logistics_manager",rolesMode:"any"}),p({label:"Trade Compliance Approval",roles:"trade_compliance",rolesMode:"any"}),p({label:"Broker Confirmation",roles:"customs_broker",rolesMode:"any"})],fields:"declaration_status,tariff_codes",scenario:"controller"},controller:{description:"Require regulatory approvals before altering customs declarations.",fields:"declaration_status,tariff_codes"}},soxJournalEntry:{label:"SOX journal entry adjustment",description:"Accounting manager, controller, and internal audit review required.",defaults:{includeInitiator:!1,steps:[p({label:"Accounting Manager Review",roles:"accounting_manager",rolesMode:"any"}),p({label:"Controller Approval",roles:"financial_controller",rolesMode:"any"}),p({label:"Internal Audit Sign-off",roles:"internal_auditor",rolesMode:"any"})],fields:"journal_entry,adjustment_reason",scenario:"model"},controller:{description:"Enforce SOX-compliant approvals for sensitive journal entry adjustments.",fields:"journal_entry,adjustment_reason"}},samlProviderChange:{label:"SAML identity provider change",description:"Security, IAM, and CTO approvals before swapping identity providers.",defaults:{includeInitiator:!1,steps:[p({label:"Security Engineering Review",roles:"security_engineer",rolesMode:"any"}),p({label:"IAM Lead Approval",roles:"iam_lead",rolesMode:"any"}),p({label:"CTO Sign-off",roles:"cto",rolesMode:"any"})],fields:"saml_metadata,acs_url",scenario:"controller"},controller:{description:"Protect SAML configuration updates behind multi-party approvals.",fields:"saml_metadata,acs_url"}},customerOffboarding:{label:"Customer offboarding with data purge",description:"Customer success, legal, and compliance approvals before purge.",defaults:{includeInitiator:!1,steps:[p({label:"Customer Success Review",roles:"customer_success_manager",rolesMode:"any"}),p({label:"Legal Approval",roles:"legal_counsel",rolesMode:"any"}),p({label:"Compliance Confirmation",roles:"compliance_manager",rolesMode:"any"})],fields:"offboarding_status,purge_date",scenario:"controller"},controller:{description:"Ensure regulated data purges receive full approval trail.",fields:"offboarding_status,purge_date"}},inventoryWriteOff:{label:"Inventory write-off above threshold",description:"Warehouse and finance oversight for significant write-offs.",defaults:{includeInitiator:!1,steps:[p({label:"Warehouse Verification",roles:"warehouse_manager",rolesMode:"any"}),p({label:"Finance Approval",roles:"finance_controller",rolesMode:"any"})],fields:"write_off_amount,write_off_reason",scenario:"model"},controller:{description:"Require approvals before committing large inventory write-offs.",fields:"write_off_amount,write_off_reason"}},loanDisbursement:{label:"Loan disbursement release",description:"Loan officer, risk, and treasury approvals before disbursing funds.",defaults:{includeInitiator:!1,steps:[p({label:"Loan Officer Confirmation",roles:"loan_officer",rolesMode:"any"}),p({label:"Risk Approval",roles:"risk_officer",rolesMode:"any"}),p({label:"Treasury Release",roles:"treasury_manager",rolesMode:"any"})],fields:"disbursement_amount,disbursement_date",scenario:"controller"},controller:{description:"Gate loan disbursements via multi-party approvals.",fields:"disbursement_amount,disbursement_date"}},productionDeploy:{label:"Production deploy with schema change",description:"Engineering, QA, and SRE approvals before risky deploys.",defaults:{includeInitiator:!0,steps:[p({label:"Engineering Review",permissions:"deployments.promote",permissionsMode:"all",roles:"lead_engineer",rolesMode:"all"}),p({label:"QA Sign-off",roles:"qa_manager",rolesMode:"any"}),p({label:"SRE Approval",roles:"sre_on_call",rolesMode:"any"})],fields:"deploy_plan,schema_migration",scenario:"model"},controller:{description:"Intercept deploy tasks that include schema changes for manual oversight.",fields:"deploy_plan,schema_migration"}}};function m(e){return Object.assign({},e,{steps:e.steps.map(function(e){return Object.assign({},e)})})}var g={templateSelect:"Pick a preset to pre-fill steps, signer rules, and fields.",scenarioModel:"Generate an approval flow for Eloquent models guarded by Guardrails.",scenarioController:"Generate an approval hook for controller-based intercepts.",fields:"Comma separated list of attributes or payload keys that Guardrails should protect.",includeInitiator:"Counts the initiator toward thresholds when they meet signer rules.",stepLabel:"Title shown to reviewers in the approval UI.",approvals:"How many approvals must be collected before the step completes.",permissions:"Comma separated permission identifiers required for a signer.",permissionsMode:"Switch between any-of or all-of matching for required permissions.",samePermission:"Require signers to share the initiator\u2019s permission context.",roles:"Comma separated role slugs that qualify an approver.",rolesMode:"Switch between any-of or all-of matching for required roles.",sameRole:"Require signers to share the initiator\u2019s role.",signerRequirementsSummary:"Expand to tune eligibility rules for who may approve the step.",minRejections:"Minimum number of rejections before the step is marked rejected.",maxRejections:"Maximum rejections to record before blocking further votes.",rejectionSummary:"Expand to configure how rejection votes finalize the step.",moveUp:"Move this step earlier in the approval order.",moveDown:"Move this step later in the approval order.",removeStep:"Remove this step from the flow.",addStep:"Add another approval step at the end of the flow."};function h(e){return e.split(",").map(function(e){return e.trim()}).filter(function(e){return e.length>0})}function v(e){return e.replace(/\\/g,"\\\\").replace(/'/g,"\\'")}function y(e){return e.map(function(e){return"'"+v(e)+"'"}).join(", ")}function b(e,n){return e.length>0?e:n.trim()?h(n):[]}function _(e){if(null==e||""===e)return null;var n=Number(e);return!Number.isFinite(n)||n<1?null:Math.round(n)}function j(e,n,r){var a=function(e,n){return(e.length>0?e:n).map(function(e,r){var a,i,o,l,s=null!=(a=n[r])?a:p({label:"Step "+(r+1)}),t=Object.assign({},p({label:"Step "+(r+1)}),s,e),c=null==(i=t.label)?void 0:i.trim().replace(/\s+/g," "),d=_(t.minRejections),u=_(t.maxRejections);return null!==d&&null!==u&&u<d&&(u=d),Object.assign({},t,{label:c&&c.length?c:"Step "+(r+1),approvals:t.approvals&&t.approvals>0?Math.round(t.approvals):1,permissions:null!=(o=t.permissions)?o:"",permissionsMode:"all"===t.permissionsMode?"all":"any",roles:null!=(l=t.roles)?l:"",rolesMode:"all"===t.rolesMode?"all":"any",samePermissionAsInitiator:Boolean(t.samePermissionAsInitiator),sameRoleAsInitiator:Boolean(t.sameRoleAsInitiator),minRejections:d,maxRejections:u})})}(e.steps,r.defaults.steps),i=["Flow::make() // Start a new Guardrails flow"];return e.includeInitiator&&i.push("    ->includeInitiator(true, true)"),a.forEach(function(e,n){var r=h(e.permissions),a=h(e.roles);i.push("    // "+function(e,n){return"Step "+(n+1)+" - "+e.replace(/\r?\n/g," ").replace(/\*\//g,"*/")}(e.label,n)),r.length&&("all"===e.permissionsMode?i.push("    ->permissions(["+y(r)+"])"):i.push("    ->anyOfPermissions(["+y(r)+"])")),a.length&&("all"===e.rolesMode?i.push("    ->roles(["+y(a)+"])"):i.push("    ->anyOfRoles(["+y(a)+"])")),e.samePermissionAsInitiator&&i.push("    ->samePermissionAsInitiator(true)"),e.sameRoleAsInitiator&&i.push("    ->sameRoleAsInitiator(true)"),null!==e.minRejections&&null!==e.maxRejections?i.push("    ->rejectionThreshold("+e.minRejections+", "+e.maxRejections+")"):null!==e.minRejections?i.push("    ->minRejections("+e.minRejections+")"):null!==e.maxRejections&&i.push("    ->maxRejections("+e.maxRejections+")");var o=v(e.label);i.push("    ->signedBy("+e.approvals+", '"+o+"')")}),i.push("    // Finalize flow definition"),i.push("    ->build(),"),i}function x(){var e=(0,l.useState)("twoPerson"),n=e[0],r=e[1],a=(0,l.useState)(function(){return m(f.twoPerson.defaults)}),_=a[0],x=a[1],M=(0,l.useState)(!1),w=M[0],R=M[1],A=(0,l.useState)(null),I=A[0],C=A[1],S="dark"===(0,s.G)().colorMode?c.A:d.A,k=(0,l.useRef)(null),O=(0,l.useRef)(!1),N=(0,l.useRef)(!1),P=(0,l.useMemo)(function(){return"model"===_.scenario?function(e,n){var r=f[n],a=b(h(e.fields),r.defaults.fields),i=j(e,0,r);return"<?php\n\nuse Illuminate\\Database\\Eloquent\\Model;\nuse OVAC\\Guardrails\\Concerns\\Guardrail;\nuse OVAC\\Guardrails\\Services\\Flow;\n\n/**\n * Example model used in the Guardrails playground.\n */\nclass ExampleModel extends Model\n{\n    use Guardrail;\n\n    /**\n     * Guardrails should watch these attributes for approval.\n     *\n     * @return array<int, string> Attribute keys that require review before persisting.\n     */\n    public function guardrailAttributes(): array\n    {\n        return ["+y(a)+"];\n    }\n\n    /**\n     * Describe the Guardrails approval workflow for this model.\n     *\n     * @param  array<string, mixed>  $dirty  Pending attribute changes captured for approval.\n     * @param  string  $event  Model lifecycle event (creating/updating/custom) that triggered capture.\n     * @return array<int, array<string, mixed>> Normalized multi-step Guardrails definition.\n     */\n    public function guardrailApprovalFlow(array $dirty, string $event): array\n    {\n        return [\n"+i.map(function(e){return"            "+e}).join("\n")+"\n        ];\n    }\n}\n"}(_,n):function(e,n){var r=f[n],a=b(h(e.fields),r.controller.fields),i=j(e,0,r);return"<?php\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse OVAC\\Guardrails\\Http\\Concerns\\InteractsWithGuardrail;\nuse OVAC\\Guardrails\\Services\\Flow;\nuse OVAC\\Guardrails\\Support\\SigningPolicy;\n\nclass "+("model"===e.scenario?"ExampleModelController":"ExampleController")+" extends Controller\n{\n    /** Enables Guardrails controller interception helpers. */\n    use InteractsWithGuardrail;\n\n    /**\n     * "+("model"===e.scenario?"Update ExampleModel via Guardrails approvals.":"Submit controller changes through Guardrails approvals.")+"\n     *\n"+(a.length?a:["payload"]).map(function(e){var n=function(e){var n=e.toLowerCase(),r=function(e){return e.replace(/_/g," ").replace(/\b(id)\b$/i,"").replace(/\s+/g," ").trim()}(e),a=r.charAt(0).toUpperCase()+r.slice(1);return n.endsWith("id")||n.includes("_id")?{type:"integer",example:"1",description:(a||"Resource")+" identifier that the change targets."}:["amount","total","value","quantity","count","number","price","rate","limit"].some(function(e){return n.includes(e)})?{type:"number",example:"199.50",description:(a||"Numeric value")+" used when applying the change."}:["enabled","active","flag"].some(function(e){return n.includes(e)})?{type:"boolean",example:"true",description:"Whether "+(r||"this flag")+" should be enabled after approval."}:n.includes("status")?{type:"string",example:'"approved"',description:"New status value applied to "+(r||"the resource")+"."}:n.includes("name")?{type:"string",example:'"Jane Doe"',description:"Name associated with "+(r||"the record")+"."}:{type:"string",example:'"'+(r||"value")+'"',description:(a||"Value")+" forwarded for approval."}}(e),r=n.type,a=n.example;return"     * @bodyParam "+e+" "+r+" required "+n.description+" Example: "+a}).join("\n")+"\n     *\n     * @param  Request       $request  Incoming HTTP request containing validated data.\n     * @param  ExampleModel  $model    Domain model instance that is being changed.\n     * @return array{captured: bool, request_id: ?string, changes: array<string, mixed>} Guardrails capture metadata.\n     */\n    public function update(Request $request, ExampleModel $model): array\n    {\n        /** @var array<string, mixed> $data */\n        $data = $request->validated(["+y(a)+"]);\n\n        return $this->guardrailIntercept($model, $data, [\n            'description' => '"+v(r.controller.description)+"',\n            'only' => ["+y(a)+"],\n            'extender' => function (SigningPolicy $policy): array {\n                return [\n"+i.map(function(e){return"                    "+e}).join("\n")+"\n                ];\n            },\n        ]);\n    }\n}\n"}(_,n)},[_,n]);function q(e,n){x(function(r){var a;return Object.assign({},r,((a={})[e]=n,a))})}function E(e){var n=e.target.value;x(function(e){return Object.assign({},e,{scenario:n})})}function G(e,n){x(function(r){return Object.assign({},r,{steps:r.steps.map(function(r,a){return a===e?n(r):r})})})}function L(e,n){x(function(r){var a=e+n;if(a<0||a>=r.steps.length)return r;var i=[].concat(r.steps),o=i.splice(e,1)[0];return i.splice(a,0,o),Object.assign({},r,{steps:i})})}function F(e){e.preventDefault()}function T(){C(null)}function D(e){var n=e.trim();if(!n.length)return null;var r=Number(n);return!Number.isFinite(r)||r<1?null:Math.round(r)}function H(){return(H=(0,o.A)((0,i.A)().m(function e(){return(0,i.A)().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,navigator.clipboard.writeText(P);case 1:R(!0),setTimeout(function(){return R(!1)},1600);case 2:return e.a(2)}},e)}))).apply(this,arguments)}(0,l.useEffect)(function(){var e=k.current;if(e){var n=e.querySelector("pre");if(n instanceof HTMLElement)return O.current?void("controller"!==_.scenario||N.current||(n.scrollTop=n.scrollHeight,N.current=!0)):(n.scrollTop=n.scrollHeight,O.current=!0,void(N.current="controller"===_.scenario))}},[P,_.scenario]);var $=f[n];return(0,u.jsx)("div",{className:"playground",children:(0,u.jsx)("div",{className:"playground__card",children:(0,u.jsxs)("div",{className:"playground__layout",children:[(0,u.jsxs)("div",{className:"playground__controls",children:[(0,u.jsxs)("header",{className:"playground__header",children:[(0,u.jsxs)("div",{className:"playground__scenario",children:[(0,u.jsx)("label",{htmlFor:"template",children:"Scenario"}),(0,u.jsx)("select",{id:"template",value:n,onChange:function(e){var n=e.target.value;r(n),x(m(f[n].defaults))},title:g.templateSelect,children:Object.entries(f).map(function(e){var n=e[0],r=e[1];return(0,u.jsx)("option",{value:n,children:r.label},n)})}),(0,u.jsx)("p",{children:$.description})]}),(0,u.jsxs)("div",{className:"playground__toggle",role:"radiogroup","aria-label":"Generate snippet for",children:[(0,u.jsxs)("label",{className:"model"===_.scenario?"active":"",title:g.scenarioModel,children:[(0,u.jsx)("input",{type:"radio",name:"scenario",value:"model",checked:"model"===_.scenario,onChange:E}),"Model flow"]}),(0,u.jsxs)("label",{className:"controller"===_.scenario?"active":"",title:g.scenarioController,children:[(0,u.jsx)("input",{type:"radio",name:"scenario",value:"controller",checked:"controller"===_.scenario,onChange:E}),"Controller intercept"]})]})]}),(0,u.jsxs)("div",{className:"playground__grid",children:[(0,u.jsxs)("label",{className:"playground__field playground__field--wide",children:[(0,u.jsx)("span",{children:"model"===_.scenario?"Guarded attributes (comma separated)":"Allowed fields (comma separated)"}),(0,u.jsx)("input",{id:"fields",type:"text",value:_.fields,onChange:function(e){return q("fields",e.target.value)},title:g.fields})]}),(0,u.jsxs)("label",{className:"playground__checkbox",title:g.includeInitiator,children:[(0,u.jsx)("input",{type:"checkbox",checked:_.includeInitiator,onChange:function(e){return q("includeInitiator",e.target.checked)}}),"Count initiator as signer"]})]}),(0,u.jsxs)("div",{className:"playground__steps",children:[(0,u.jsxs)("div",{className:"playground__stepsHeader",children:[(0,u.jsx)("h3",{children:"Approval steps"}),(0,u.jsx)("p",{children:"Configure approval counts and optional rejection thresholds."})]}),_.steps.map(function(e,n){var r,a,i=Boolean(e.permissions.trim()||e.roles.trim()||e.samePermissionAsInitiator||e.sameRoleAsInitiator),o=null!==e.minRejections||null!==e.maxRejections,l=o?"Min "+(null!=(r=e.minRejections)?r:"\u2014")+" \xb7 Max "+(null!=(a=e.maxRejections)?a:"\u2014"):"Optional";return(0,u.jsxs)("div",{className:"playground__step"+(I===n?" playground__step--dragging":""),draggable:!0,onDragStart:function(){return function(e){C(e)}(n)},onDragOver:F,onDrop:function(){return function(e){null!==I&&I!==e?(x(function(n){var r=[].concat(n.steps),a=r.splice(I,1)[0];return r.splice(e,0,a),Object.assign({},n,{steps:r})}),C(null)):C(null)}(n)},onDragEnd:T,children:[(0,u.jsxs)("div",{className:"playground__stepHeader",children:[(0,u.jsxs)("strong",{children:["Step ",n+1]}),(0,u.jsxs)("div",{className:"playground__stepActions",children:[n>0&&(0,u.jsx)("button",{className:"playground__move",type:"button",onClick:function(){return L(n,-1)},"aria-label":"Move step up",title:g.moveUp,children:"\u2191"}),n<_.steps.length-1&&(0,u.jsx)("button",{className:"playground__move",type:"button",onClick:function(){return L(n,1)},"aria-label":"Move step down",title:g.moveDown,children:"\u2193"}),_.steps.length>1&&(0,u.jsx)("button",{className:"playground__removeStep",type:"button",onClick:function(){return function(e){x(function(n){return Object.assign({},n,{steps:n.steps.length>1?n.steps.filter(function(n,r){return r!==e}):n.steps})})}(n)},"aria-label":"Remove step "+(n+1),title:g.removeStep,children:"\xd7"})]})]}),(0,u.jsxs)("div",{className:"playground__stepGrid",children:[(0,u.jsxs)("label",{className:"playground__field playground__stepLabel",children:[(0,u.jsx)("span",{children:"Label"}),(0,u.jsx)("input",{type:"text",value:e.label,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{label:n})})}(n,e.target.value)},title:g.stepLabel})]}),(0,u.jsxs)("label",{className:"playground__field playground__stepApprovals",children:[(0,u.jsx)("span",{children:"Approvals"}),(0,u.jsx)("input",{type:"number",min:1,max:10,step:1,value:e.approvals,onChange:function(e){return function(e,n){var r=Number.isFinite(n)&&n>0?Math.round(n):1;G(e,function(e){return Object.assign({},e,{approvals:r})})}(n,Number(e.target.value))},title:g.approvals})]})]}),(0,u.jsxs)("details",{className:"playground__stepAdvanced",defaultOpen:i,children:[(0,u.jsx)("summary",{title:g.signerRequirementsSummary,children:"Signer requirements"}),(0,u.jsxs)("div",{className:"playground__stepAdvancedGrid",children:[(0,u.jsxs)("label",{className:"playground__field playground__stepWide",children:[(0,u.jsx)("span",{children:"Permissions (comma separated)"}),(0,u.jsx)("input",{type:"text",value:e.permissions,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{permissions:n})})}(n,e.target.value)},title:g.permissions})]}),(0,u.jsxs)("label",{className:"playground__field playground__stepMode",children:[(0,u.jsx)("span",{children:"Permission mode"}),(0,u.jsxs)("select",{value:e.permissionsMode,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{permissionsMode:n})})}(n,e.target.value)},title:g.permissionsMode,children:[(0,u.jsx)("option",{value:"any",children:"Any listed (any-of)"}),(0,u.jsx)("option",{value:"all",children:"All listed (all-of)"})]})]}),(0,u.jsxs)("label",{className:"playground__checkbox playground__stepToggle",title:g.samePermission,children:[(0,u.jsx)("input",{type:"checkbox",checked:e.samePermissionAsInitiator,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{samePermissionAsInitiator:n})})}(n,e.target.checked)}}),"Same permission as initiator"]}),(0,u.jsxs)("label",{className:"playground__field playground__stepWide",children:[(0,u.jsx)("span",{children:"Roles (comma separated)"}),(0,u.jsx)("input",{type:"text",value:e.roles,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{roles:n})})}(n,e.target.value)},title:g.roles})]}),(0,u.jsxs)("label",{className:"playground__field playground__stepMode",children:[(0,u.jsx)("span",{children:"Role mode"}),(0,u.jsxs)("select",{value:e.rolesMode,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{rolesMode:n})})}(n,e.target.value)},title:g.rolesMode,children:[(0,u.jsx)("option",{value:"any",children:"Any listed (any-of)"}),(0,u.jsx)("option",{value:"all",children:"All listed (all-of)"})]})]}),(0,u.jsxs)("label",{className:"playground__checkbox playground__stepToggle",title:g.sameRole,children:[(0,u.jsx)("input",{type:"checkbox",checked:e.sameRoleAsInitiator,onChange:function(e){return function(e,n){G(e,function(e){return Object.assign({},e,{sameRoleAsInitiator:n})})}(n,e.target.checked)}}),"Same role as initiator"]})]})]}),(0,u.jsxs)("details",{className:"playground__stepRejections",defaultOpen:o,children:[(0,u.jsxs)("summary",{title:g.rejectionSummary,children:["Rejection thresholds",(0,u.jsx)("span",{className:"playground__stepSummaryHint",children:l})]}),(0,u.jsxs)("div",{className:"playground__stepRejectionsGrid",children:[(0,u.jsxs)("label",{className:"playground__field playground__stepThreshold",children:[(0,u.jsx)("span",{children:"Min rejections"}),(0,u.jsx)("input",{type:"text",inputMode:"numeric",pattern:"[0-9]*",placeholder:"none",value:null!==e.minRejections?String(e.minRejections):"",onChange:function(e){return function(e,n){var r=D(n);G(e,function(e){var n=Object.assign({},e,{minRejections:r});return null!==r&&null!==e.maxRejections&&e.maxRejections<r&&(n.maxRejections=r),n})}(n,e.target.value)},title:g.minRejections})]}),(0,u.jsxs)("label",{className:"playground__field playground__stepThreshold",children:[(0,u.jsx)("span",{children:"Max rejections"}),(0,u.jsx)("input",{type:"text",inputMode:"numeric",pattern:"[0-9]*",placeholder:"none",value:null!==e.maxRejections?String(e.maxRejections):"",onChange:function(e){return function(e,n){var r=D(n);G(e,function(e){var n=Object.assign({},e,{maxRejections:r});return null!==r&&null!==e.minRejections&&r<e.minRejections&&(n.minRejections=r),n})}(n,e.target.value)},title:g.maxRejections})]})]})]})]},"step-"+n)}),(0,u.jsx)("button",{className:"playground__addStep",type:"button",onClick:function(){x(function(e){var r,a=f[n].defaults.steps,i=e.steps.length,o=a[i],l=o?Object.assign({},o):{},s=null!=(r=l.label)?r:"Step "+(i+1),t=Object.assign({},p({label:s}),l);return Object.assign({},e,{steps:[].concat(e.steps,[t])})})},title:g.addStep,children:"Add step"})]}),"controller"===_.scenario&&(0,u.jsx)("p",{className:"playground__note",children:$.controller.description})]}),(0,u.jsxs)("div",{className:"playground__previewPanel",children:[(0,u.jsxs)("div",{className:"playground__previewHeader",children:[(0,u.jsx)("button",{className:"playground__copy",type:"button",onClick:function(){return H.apply(this,arguments)},children:w?"Copied!":"Copy snippet"}),(0,u.jsx)("span",{className:"playground__help",children:"Preview updates instantly as you tweak settings."})]}),(0,u.jsx)("div",{className:"playground__preview",ref:k,children:(0,u.jsx)(t.A,{language:"php",style:S,customStyle:{margin:0,background:"var(--playground-code-bg)",border:"1px solid var(--playground-code-border)",borderRadius:"14px",padding:"0.75rem 1rem",maxHeight:"78vh",overflow:"auto",boxShadow:"inset 0 1px 0 rgba(255, 255, 255, 0.6)"},codeTagProps:{style:{fontSize:"0.74rem",lineHeight:"1.45",fontFamily:"var(--ifm-font-family-monospace)"}},children:P})})]})]})})})}function M(){return(0,u.jsx)(a.A,{title:"Playground",description:"Interactive Guardrails flow builder and code generator.",children:(0,u.jsx)("main",{className:"container margin-vert--lg",children:(0,u.jsx)("div",{className:"row",children:(0,u.jsx)("div",{className:"col col--12",children:(0,u.jsx)(x,{})})})})})}}}]);