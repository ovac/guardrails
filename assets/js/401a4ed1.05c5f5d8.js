"use strict";(self.webpackChunkguardrails_docs=self.webpackChunkguardrails_docs||[]).push([[5645],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const a={},t=i.createContext(a);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},47502:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"use-cases","title":"use-cases","description":"title: Use Cases","source":"@site/docs/use-cases.md","sourceDirName":".","slug":"/use-cases","permalink":"/guardrails/docs/next/use-cases","draft":false,"unlisted":false,"editUrl":"https://github.com/ovac/guardrails/edit/main/resources/docs/docs/use-cases.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Common Patterns","permalink":"/guardrails/docs/next/patterns"},"next":{"title":"Advanced Flows","permalink":"/guardrails/docs/next/advanced"}}');var a=s(74848),t=s(28453);const l={},o="Use Cases",r={},c=[{value:"Content Publishing (Marketing)",id:"content-publishing-marketing",level:2},{value:"Discount Campaign (Sales)",id:"discount-campaign-sales",level:2},{value:"Product Rollout (Product + Engineering)",id:"product-rollout-product--engineering",level:2},{value:"Legal &amp; Security (Compliance)",id:"legal--security-compliance",level:2},{value:"Finance Approval (Payouts)",id:"finance-approval-payouts",level:2},{value:"Voting (RFCs, Decisions)",id:"voting-rfcs-decisions",level:2},{value:"High\u2011Risk Changes (Multi\u2011step Escalation)",id:"highrisk-changes-multistep-escalation",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"title: Use Cases\ndescription: Practical end-to-end scenarios across teams."}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"use-cases",children:"Use Cases"})}),"\n",(0,a.jsx)(n.p,{children:"This page shows how Guardrails fits different teams with simple, copy\u2011pasteable flows."}),"\n",(0,a.jsx)(n.h2,{id:"content-publishing-marketing",children:"Content Publishing (Marketing)"}),"\n",(0,a.jsx)(n.p,{children:"Two\u2011man rule to publish a blog post: author + any editor."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfPermissions(['content.publish'])\n  ->includeInitiator(true, true)   // author pre\u2011approved\n  ->signedBy(2, 'Editorial Review')  // needs one editor\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"discount-campaign-sales",children:"Discount Campaign (Sales)"}),"\n",(0,a.jsx)(n.p,{children:"Approve discounts based on depth: Sales lead under 20%, VP if 20%+."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"// Compute at runtime\n$depth = (int) $changes['discount_percent'];\n\nreturn $depth < 20\n  ? Flow::make()->anyOfRoles(['sales_lead'])->signedBy(1, 'Sales Approval')->build()\n  : Flow::make()->anyOfRoles(['vp_sales'])->signedBy(1, 'VP Approval')->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"product-rollout-product--engineering",children:"Product Rollout (Product + Engineering)"}),"\n",(0,a.jsx)(n.p,{children:"Ops approves feature flag, then Engineering Lead approves rollout."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfRoles(['ops_manager'])\n  ->signedBy(1, 'Ops Gate')\n  ->anyOfRoles(['eng_lead'])\n  ->signedBy(1, 'Engineering Gate')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"legal--security-compliance",children:"Legal & Security (Compliance)"}),"\n",(0,a.jsx)(n.p,{children:"Any of Legal OR Security must sign before publishing policy updates."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfRoles(['legal_counsel','security_officer'])\n  ->signedBy(1, 'Compliance Review')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"finance-approval-payouts",children:"Finance Approval (Payouts)"}),"\n",(0,a.jsx)(n.p,{children:"Two approvals in Finance; initiator cannot be the only one."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->permissions(['payouts.approve'])\n  ->requireAnyPermissions()        // count any of the listed perms\n  ->includeInitiator(true, true)   // initiator counts\n  ->signedBy(2, 'Finance Double\u2011Sign')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"voting-rfcs-decisions",children:"Voting (RFCs, Decisions)"}),"\n",(0,a.jsx)(n.p,{children:"Require 3 votes out of 5 architects."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"Flow::make()\n  ->anyOfRoles(['architect'])\n  ->signedBy(3, 'Architecture Vote')\n  ->build();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"highrisk-changes-multistep-escalation",children:"High\u2011Risk Changes (Multi\u2011step Escalation)"}),"\n",(0,a.jsx)(n.p,{children:"Ops must approve; if amount > 100k, add CFO."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"$flow = Flow::make()\n  ->anyOfPermissions(['ops.change'])\n  ->signedBy(1, 'Ops');\n\nif (($changes['amount'] ?? 0) > 100000) {\n  $flow->anyOfRoles(['cfo'])->signedBy(1, 'CFO');\n}\n\nreturn $flow->build();\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);